@model bool?
@{
    var editorCol = 10;
    var labelCol = 2;
    var noGroup = false;
    if (ViewData["editorCol"] != null)
    {
        var editorCold = ViewData["editorCol"].ToString();
        int.TryParse(editorCold, out editorCol);
    }
    if (ViewData["labelCol"] != null)
    {
        var labelCold = ViewData["labelCol"].ToString();
        int.TryParse(labelCold, out labelCol);
    }
    if (ViewData["noGroup"] != null)
    {
        var noGroupD = ViewData["noGroup"].ToString();
        bool.TryParse(noGroupD, out noGroup);
    }
}

@if (noGroup)
{
    <div class="offset-@labelCol col-@editorCol">
        <div class="form-check">
            @Html.CheckBox("", Model.HasValue && Model.Value, new { @class = "form-check-input" })
            <label brn-field="@Model" brn-notext="true" class="form-check-label">
                <span brn-fieldtext="@Model"></span>
            </label>
        </div>
    </div>
}
else
{
    <div class='form-group'>
        <div class="offset-@labelCol col-@editorCol">
            <div class="form-check">
                @Html.CheckBox("", Model.HasValue && Model.Value, new { @class = "form-check-input" })
                <label brn-field="@Model" brn-notext="true" class="form-check-label">
                    <span brn-fieldtext="@Model"></span>
                </label>
            </div>
        </div>
    </div>
}